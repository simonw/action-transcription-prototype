<?xml version="1.0" encoding="utf-8" ?>
<tt xml:lang="en-US" xmlns="http://www.w3.org/ns/ttml" xmlns:ttm="http://www.w3.org/ns/ttml#metadata" xmlns:tts="http://www.w3.org/ns/ttml#styling" xmlns:ttp="http://www.w3.org/ns/ttml#parameter" ttp:profile="http://www.w3.org/TR/profile/sdp-us" >
<head>
<styling>
<style xml:id="s1" tts:textAlign="center" tts:extent="90% 90%" tts:origin="5% 5%" tts:displayAlign="after"/>
<style xml:id="s2" tts:fontSize=".72c" tts:backgroundColor="black" tts:color="white"/>
</styling>
<layout>
<region xml:id="r1" style="s1"/>
</layout>
</head>
<body region="r1">
<div>
<p begin="00:00:01.000" end="00:00:04.000" style="s2">Captions for PyGotham TV 2021 are sponsored by Two Sigma</p>
<p begin="00:00:05.470" end="00:00:07.020" style="s2">- Hello, PyGotham.</p>
<p begin="00:00:07.020" end="00:00:08.660" style="s2">My name is Simon, and <br />I&#39;m going to show you</p>
<p begin="00:00:08.660" end="00:00:10.410" style="s2">in just 10 minutes, how to build,</p>
<p begin="00:00:10.410" end="00:00:13.113" style="s2">test and publish an open <br />source Python library.</p>
<p begin="00:00:14.169" end="00:00:15.490" style="s2">I&#39;m actually going to publish</p>
<p begin="00:00:15.490" end="00:00:16.980" style="s2">a library while I record this talk.</p>
<p begin="00:00:16.980" end="00:00:18.070" style="s2">This is a piece of code,</p>
<p begin="00:00:18.070" end="00:00:19.930" style="s2">which I&#39;ve been copying <br />and pasting into projects</p>
<p begin="00:00:19.930" end="00:00:21.340" style="s2">for over a decade now.</p>
<p begin="00:00:21.340" end="00:00:22.790" style="s2">It&#39;s a very simple little thing</p>
<p begin="00:00:22.790" end="00:00:24.840" style="s2">that helps you create string based</p>
<p begin="00:00:24.840" end="00:00:28.050" style="s2">shortened versions of numeric identifiers.</p>
<p begin="00:00:28.050" end="00:00:29.260" style="s2">I&#39;ll do a quick demonstration</p>
<p begin="00:00:29.260" end="00:00:30.630" style="s2">of what that looks like.</p>
<p begin="00:00:30.630" end="00:00:32.450" style="s2">Let&#39;s paste it into a Jupyter notebook.</p>
<p begin="00:00:32.450" end="00:00:34.357" style="s2">And now if I do pid.from_int (1234),</p>
<p begin="00:00:35.629" end="00:00:36.587" style="s2">it says, gxd.</p>
<p begin="00:00:36.587" end="00:00:41.587" style="s2">And if I do pid.to_int <br />of gxd, it says 1234.</p>
<p begin="00:00:41.890" end="00:00:43.290" style="s2">So very simple piece of code.</p>
<p begin="00:00:43.290" end="00:00:44.880" style="s2">Let&#39;s turn this into a package</p>
<p begin="00:00:44.880" end="00:00:48.450" style="s2">on the Python package on <br />the Python package index.</p>
<p begin="00:00:48.450" end="00:00:50.820" style="s2">So I&#39;m going to create <br />a directory called pids.</p>
<p begin="00:00:50.820" end="00:00:53.370" style="s2">I checked, and this is an <br />available name right now.</p>
<p begin="00:00:54.383" end="00:00:56.623" style="s2">And I&#39;m going to add that file.</p>
<p begin="00:00:58.214" end="00:01:01.930" style="s2">Let&#39;s create a new file called pid.py.</p>
<p begin="00:01:01.930" end="00:01:05.960" style="s2">We&#39;ll stick it in that folder <br />and we&#39;ll paste in that code.</p>
<p begin="00:01:05.960" end="00:01:06.883" style="s2">So that&#39;s my code.</p>
<p begin="00:01:08.490" end="00:01:11.030" style="s2">Creating a package, all you need for sure</p>
<p begin="00:01:11.030" end="00:01:13.420" style="s2">is a setup.py file,</p>
<p begin="00:01:13.420" end="00:01:14.480" style="s2">which describes how the package will work.</p>
<p begin="00:01:14.480" end="00:01:16.554" style="s2">So I&#39;m going to create that.</p>
<p begin="00:01:16.554" end="00:01:17.807" style="s2">And then I&#39;m going to paste</p>
<p begin="00:01:17.807" end="00:01:19.257" style="s2">in this little template here.</p>
<p begin="00:01:19.257" end="00:01:20.170" style="s2">This is the simplest possible version</p>
<p begin="00:01:20.170" end="00:01:22.040" style="s2">of a valid set up .py file.</p>
<p begin="00:01:22.040" end="00:01:25.220" style="s2">I&#39;m going to give it the <br />name, pids, version 0.1.,</p>
<p begin="00:01:25.220" end="00:01:27.510" style="s2">it&#39;s a tiny Python library <br />in the description.</p>
<p begin="00:01:27.510" end="00:01:30.136" style="s2">And the only module <br />I&#39;m going to include is</p>
<p begin="00:01:30.136" end="00:01:31.940" style="s2">that pids.py file I just created.</p>
<p begin="00:01:31.940" end="00:01:35.129" style="s2">So now in here we have two files, pid.py,</p>
<p begin="00:01:35.129" end="00:01:36.736" style="s2">and setup.py.</p>
<p begin="00:01:36.736" end="00:01:40.430" style="s2">Now, if I run python3 setup.py sdist,</p>
<p begin="00:01:40.430" end="00:01:41.980" style="s2">this is where the magic happens,</p>
<p begin="00:01:41.980" end="00:01:43.380" style="s2">that command back created me</p>
<p begin="00:01:44.242" end="00:01:46.710" style="s2">a file called pids-0.1.tar.gz.</p>
<p begin="00:01:46.710" end="00:01:48.281" style="s2">And that is a file,</p>
<p begin="00:01:48.281" end="00:01:50.140" style="s2">which I can install into any environment</p>
<p begin="00:01:50.140" end="00:01:51.600" style="s2">to install this package.</p>
<p begin="00:01:51.600" end="00:01:53.470" style="s2">Can actually demonstrate that once again,</p>
<p begin="00:01:53.470" end="00:01:55.950" style="s2">in this Jupyter notebook,</p>
<p begin="00:01:55.950" end="00:02:00.950" style="s2">let&#39;s pop that open and <br />we&#39;ll do pip install,</p>
<p begin="00:02:01.310" end="00:02:06.310" style="s2">paste that, what was it <br />/dist/, pids, there we go.</p>
<p begin="00:02:08.795" end="00:02:11.170" style="s2">When that processes it, it installs it.</p>
<p begin="00:02:11.170" end="00:02:13.210" style="s2">And now if I type import pids,</p>
<p begin="00:02:14.200" end="00:02:16.150" style="s2">I have pids.pid as a piece of code</p>
<p begin="00:02:16.150" end="00:02:17.610" style="s2">that I can start to run.</p>
<p begin="00:02:17.610" end="00:02:20.480" style="s2">So let&#39;s upload this to the <br />Python the package index,</p>
<p begin="00:02:20.480" end="00:02:22.860" style="s2">where we do that is with <br />a tool called twine.</p>
<p begin="00:02:22.860" end="00:02:25.590" style="s2">I can say twine upload <br />dist and then pasted</p>
<p begin="00:02:25.590" end="00:02:27.820" style="s2">the name of that file <br />that I&#39;ve just created.</p>
<p begin="00:02:27.820" end="00:02:30.065" style="s2">When I do this, it&#39;ll ask me to log in</p>
<p begin="00:02:30.065" end="00:02:32.850" style="s2">with my username and my PyPI password.</p>
<p begin="00:02:32.850" end="00:02:34.310" style="s2">So you&#39;ll need to create an account</p>
<p begin="00:02:34.310" end="00:02:36.320" style="s2">on PyPI before you do this.</p>
<p begin="00:02:36.320" end="00:02:37.320" style="s2">I do that.</p>
<p begin="00:02:37.320" end="00:02:39.680" style="s2">It shows me the upload <br />and it gives me a URL.</p>
<p begin="00:02:39.680" end="00:02:42.789" style="s2">And this is live on <br />the internet right now.</p>
<p begin="00:02:42.789" end="00:02:43.622" style="s2">This is now a package which anyone</p>
<p begin="00:02:43.622" end="00:02:46.120" style="s2">in the world can install by <br />running pip install pids.</p>
<p begin="00:02:47.930" end="00:02:48.890" style="s2">But you&#39;ll notice it says here,</p>
<p begin="00:02:48.890" end="00:02:49.900" style="s2">the author of this package</p>
<p begin="00:02:49.900" end="00:02:52.110" style="s2">has not provided a project description.</p>
<p begin="00:02:52.110" end="00:02:53.540" style="s2">We&#39;re missing our documentation.</p>
<p begin="00:02:53.540" end="00:02:56.220" style="s2">So let&#39;s build that <br />now as a simple read me</p>
<p begin="00:02:56.220" end="00:02:58.370" style="s2">that we can add into that package.</p>
<p begin="00:02:58.370" end="00:03:01.610" style="s2">So here&#39;s a tiny bit of <br />documentation I wrote earlier.</p>
<p begin="00:03:01.610" end="00:03:06.610" style="s2">I&#39;m going to save that in <br />a file called README.md</p>
<p begin="00:03:06.610" end="00:03:09.000" style="s2">and VS Code can give us a little preview</p>
<p begin="00:03:09.000" end="00:03:10.940" style="s2">of it, showing you what that looks like.</p>
<p begin="00:03:10.940" end="00:03:12.658" style="s2">Not very exciting,</p>
<p begin="00:03:12.658" end="00:03:13.750" style="s2">but it does explain what&#39;s going on.</p>
<p begin="00:03:13.750" end="00:03:15.180" style="s2">So now we need to bundle</p>
<p begin="00:03:15.180" end="00:03:17.600" style="s2">that into our overall package and</p>
<p begin="00:03:17.600" end="00:03:18.920" style="s2">the why we do that is by adding</p>
<p begin="00:03:18.920" end="00:03:22.970" style="s2">a tiny bit more of a recipe <br />to our setup.py file.</p>
<p begin="00:03:22.970" end="00:03:25.240" style="s2">Here we go. I&#39;ll copy and paste this in.</p>
<p begin="00:03:25.240" end="00:03:28.120" style="s2">So we can add two more arguments here.</p>
<p begin="00:03:28.120" end="00:03:30.780" style="s2">There&#39;s description, long description</p>
<p begin="00:03:30.780" end="00:03:33.280" style="s2">and long description, content type.</p>
<p begin="00:03:33.280" end="00:03:34.630" style="s2">And here we&#39;re doing,</p>
<p begin="00:03:34.630" end="00:03:36.060" style="s2">we&#39;re calling a function I&#39;ve written</p>
<p begin="00:03:36.060" end="00:03:37.590" style="s2">called get long description,</p>
<p begin="00:03:37.590" end="00:03:39.780" style="s2">which reads that weekly file on disc</p>
<p begin="00:03:39.780" end="00:03:41.250" style="s2">and puts that in a variable.</p>
<p begin="00:03:41.250" end="00:03:43.988" style="s2">So we add this a little <br />bit of boiler plate,</p>
<p begin="00:03:43.988" end="00:03:46.438" style="s2">and we set that as the long description,</p>
<p begin="00:03:46.438" end="00:03:48.580" style="s2">I&#39;m going to bump up the <br />version number to 0.1.1,</p>
<p begin="00:03:49.918" end="00:03:51.100" style="s2">to reflect that change.</p>
<p begin="00:03:51.100" end="00:03:52.824" style="s2">And now once again,</p>
<p begin="00:03:52.824" end="00:03:55.753" style="s2">we can run python3 setup.py sdist.</p>
<p begin="00:03:57.810" end="00:03:58.850" style="s2">Oh, it doesn&#39;t like that &#39;cause</p>
<p begin="00:03:58.850" end="00:04:00.603" style="s2">I forgot the input OS there.</p>
<p begin="00:04:01.670" end="00:04:02.503" style="s2">Could do that.</p>
<p begin="00:04:02.503" end="00:04:04.790" style="s2">We now have a file in <br />dist called pids-0.1.1,</p>
<p begin="00:04:06.480" end="00:04:09.880" style="s2">and again, if we do twine <br />upload dist/pids-0.1.1.</p>
<p begin="00:04:16.563" end="00:04:19.303" style="s2">And stick in those <br />credentials one more time.</p>
<p begin="00:04:24.541" end="00:04:26.880" style="s2">This has given us our <br />second release on PyPI</p>
<p begin="00:04:26.880" end="00:04:29.040" style="s2">and this release, it&#39;s improved.</p>
<p begin="00:04:29.040" end="00:04:31.086" style="s2">It&#39;s got documentation.</p>
<p begin="00:04:31.086" end="00:04:32.531" style="s2">The contents of that readme</p>
<p begin="00:04:32.531" end="00:04:34.460" style="s2">is now available for people to see.</p>
<p begin="00:04:34.460" end="00:04:37.280" style="s2">So for our next step, <br />let&#39;s add some tests.</p>
<p begin="00:04:37.280" end="00:04:39.770" style="s2">I&#39;m going to need a tiny bit <br />more boiler plate for this.</p>
<p begin="00:04:39.770" end="00:04:43.390" style="s2">I need to add pytest as a test dependency.</p>
<p begin="00:04:43.390" end="00:04:45.159" style="s2">So I&#39;ll paste this in here.</p>
<p begin="00:04:45.159" end="00:04:46.720" style="s2">This is saying that the <br />pids test dependencies</p>
<p begin="00:04:46.720" end="00:04:49.490" style="s2">are pytest, and now I&#39;m <br />going to create myself</p>
<p begin="00:04:49.490" end="00:04:51.673" style="s2">a Python virtual environment.</p>
<p begin="00:04:52.535" end="00:04:53.368" style="s2">I&#39;ll call it venv.</p>
<p begin="00:04:53.368" end="00:04:58.230" style="s2">I&#39;ll do source venv/bin/activate <br />to activate it.</p>
<p begin="00:04:58.230" end="00:05:00.870" style="s2">And I&#39;m going to type pip installe -e,</p>
<p begin="00:05:00.870" end="00:05:03.010" style="s2">editable of my current directory</p>
<p begin="00:05:03.010" end="00:05:04.840" style="s2">and it&#39;s test dependencies.</p>
<p begin="00:05:04.840" end="00:05:06.610" style="s2">So running this installs pytest.</p>
<p begin="00:05:06.610" end="00:05:09.360" style="s2">Now, if I run pytest, it runs my test,</p>
<p begin="00:05:09.360" end="00:05:11.870" style="s2">except I don&#39;t have any tests yet.</p>
<p begin="00:05:11.870" end="00:05:14.350" style="s2">So let&#39;s create a test folder,</p>
<p begin="00:05:14.350" end="00:05:15.510" style="s2">and I&#39;m going to create a file</p>
<p begin="00:05:15.510" end="00:05:18.067" style="s2">in that called test_pids.py.</p>
<p begin="00:05:22.150" end="00:05:24.690" style="s2">And the great thing about pytest is</p>
<p begin="00:05:24.690" end="00:05:27.960" style="s2">that tests are really, <br />really small, short.</p>
<p begin="00:05:27.960" end="00:05:30.287" style="s2">So let&#39;s say a test_from_int():</p>
<p begin="00:05:31.852" end="00:05:32.828" style="s2">and it&#39;s going to say</p>
<p begin="00:05:32.828" end="00:05:34.520" style="s2">assert pids.pid.from_int(1234)==&quot;mzq&quot;</p>
<p begin="00:05:40.150" end="00:05:42.240" style="s2">So I&#39;ll try running that test.</p>
<p begin="00:05:42.240" end="00:05:44.500" style="s2">And it fails because I <br />got it wrong it&#39;s gxd</p>
<p begin="00:05:44.500" end="00:05:45.563" style="s2">is the correct value.</p>
<p begin="00:05:46.752" end="00:05:49.000" style="s2">So I can stick gxd in <br />and now my test passes.</p>
<p begin="00:05:49.000" end="00:05:51.623" style="s2">I&#39;ll do that in the opposite direction.</p>
<p begin="00:05:51.623" end="00:05:53.650" style="s2">So I&#39;ll test test_to_int(&quot;gsd&quot;) == 1234</p>
<p begin="00:05:59.690" end="00:06:04.690" style="s2">And when that tests there, <br />1235, gxf, gxd that&#39;s why.</p>
<p begin="00:06:05.166" end="00:06:08.671" style="s2">And so now I have a passing test suite,</p>
<p begin="00:06:08.671" end="00:06:10.760" style="s2">and this can obviously</p>
<p begin="00:06:10.760" end="00:06:12.853" style="s2">be extended to be a lot more thorough.</p>
<p begin="00:06:14.090" end="00:06:17.483" style="s2">So the next step is to <br />get this up on, github.</p>
<p begin="00:06:17.483" end="00:06:19.983" style="s2">I&#39;m going to create a new <br />GitHub repo called pids.</p>
<p begin="00:06:21.047" end="00:06:22.640" style="s2">I&#39;ll use the default settings for that.</p>
<p begin="00:06:22.640" end="00:06:24.150" style="s2">And then handy thing about GitHub</p>
<p begin="00:06:24.150" end="00:06:25.490" style="s2">is it just gives you the commands</p>
<p begin="00:06:25.490" end="00:06:27.210" style="s2">you need to run for you <br />to copy and paste in.</p>
<p begin="00:06:27.210" end="00:06:28.610" style="s2">So I&#39;ll do that.</p>
<p begin="00:06:28.610" end="00:06:31.290" style="s2">I&#39;m going to git add my README,</p>
<p begin="00:06:31.290" end="00:06:36.290" style="s2">my pids.py, my setup.py, <br />and that test as well.</p>
<p begin="00:06:37.500" end="00:06:40.170" style="s2">And then I&#39;ll paste in <br />these four lines here,</p>
<p begin="00:06:40.170" end="00:06:41.080" style="s2">and that will go ahead</p>
<p begin="00:06:41.080" end="00:06:43.630" style="s2">and create that repository for me.</p>
<p begin="00:06:43.630" end="00:06:45.540" style="s2">But the really neat thing about GitHub</p>
<p begin="00:06:45.540" end="00:06:47.010" style="s2">these days is you can use GitHub</p>
<p begin="00:06:47.010" end="00:06:49.283" style="s2">actions to run your tests for you.</p>
<p begin="00:06:50.660" end="00:06:52.300" style="s2">The way you do that is be by creating</p>
<p begin="00:06:52.300" end="00:06:54.830" style="s2">a Github workflows directory.</p>
<p begin="00:06:54.830" end="00:06:57.420" style="s2">So rather than create that by hand,</p>
<p begin="00:06:57.420" end="00:06:59.196" style="s2">I&#39;m going to copy that</p>
<p begin="00:06:59.196" end="00:07:01.163" style="s2">from a project I worked on recently,</p>
<p begin="00:07:03.500" end="00:07:06.117" style="s2">My sqlite explain project</p>
<p begin="00:07:06.117" end="00:07:07.400" style="s2">I happen to know has one of these.</p>
<p begin="00:07:07.400" end="00:07:10.140" style="s2">And I&#39;m gonna copy that folder here.</p>
<p begin="00:07:10.140" end="00:07:12.440" style="s2">So now, if we look in here,</p>
<p begin="00:07:12.440" end="00:07:14.840" style="s2">we now have a GitHub folder</p>
<p begin="00:07:14.840" end="00:07:17.993" style="s2">with a publish.yml and a test.yml.</p>
<p begin="00:07:17.993" end="00:07:20.420" style="s2">This right here is the one <br />we&#39;re going to try out first.</p>
<p begin="00:07:20.420" end="00:07:22.580" style="s2">What this does is it installs the package</p>
<p begin="00:07:22.580" end="00:07:24.670" style="s2">under four different versions of Python,</p>
<p begin="00:07:24.670" end="00:07:26.420" style="s2">loads that and runs those tests for us.</p>
<p begin="00:07:26.420" end="00:07:29.830" style="s2">So I can now do git add.github</p>
<p begin="00:07:29.830" end="00:07:34.007" style="s2">git commit, GitHub Actions, git push.</p>
<p begin="00:07:37.050" end="00:07:41.900" style="s2">And over here, GitHub will spot that</p>
<p begin="00:07:41.900" end="00:07:44.522" style="s2">those actions have been <br />configured and start running</p>
<p begin="00:07:44.522" end="00:07:46.270" style="s2">that test action for me straight away.</p>
<p begin="00:07:46.270" end="00:07:47.160" style="s2">You can see that this actually</p>
<p begin="00:07:47.160" end="00:07:49.880" style="s2">turns into four different <br />jobs and GitHub actions.</p>
<p begin="00:07:49.880" end="00:07:51.890" style="s2">One for each of those versions of Python</p>
<p begin="00:07:51.890" end="00:07:53.650" style="s2">that we are targeting,</p>
<p begin="00:07:53.650" end="00:07:55.060" style="s2">and it&#39;s already started running those.</p>
<p begin="00:07:55.060" end="00:07:57.050" style="s2">It&#39;s running them in parallel,</p>
<p begin="00:07:57.050" end="00:07:58.400" style="s2">all different four version.</p>
<p begin="00:07:59.370" end="00:08:00.203" style="s2">We look at this one here,</p>
<p begin="00:08:00.203" end="00:08:04.445" style="s2">it&#39;s set up some caching <br />it&#39;s installed dependencies.</p>
<p begin="00:08:04.445" end="00:08:06.161" style="s2">It&#39;s run the tests and they&#39;ve passed</p>
<p begin="00:08:06.161" end="00:08:07.848" style="s2">and we can see the <br />green ticks clicking in.</p>
<p begin="00:08:07.848" end="00:08:09.419" style="s2">And just like that, our test has been run</p>
<p begin="00:08:09.419" end="00:08:11.196" style="s2">on four versions of Python and our</p>
<p begin="00:08:11.196" end="00:08:12.510" style="s2">comment there even gets <br />a little green tick</p>
<p begin="00:08:12.510" end="00:08:14.450" style="s2">to show what had happened.</p>
<p begin="00:08:14.450" end="00:08:16.985" style="s2">So I have one last trick up my sleeve.</p>
<p begin="00:08:16.985" end="00:08:18.900" style="s2">I&#39;m going to push a new release directly</p>
<p begin="00:08:18.900" end="00:08:21.674" style="s2">from GitHub and without running anything</p>
<p begin="00:08:21.674" end="00:08:22.507" style="s2">on my computer at all.</p>
<p begin="00:08:22.507" end="00:08:24.812" style="s2">Where I&#39;m going to do this is by creating</p>
<p begin="00:08:24.812" end="00:08:27.000" style="s2">a API token on PyPI called pids.</p>
<p begin="00:08:27.000" end="00:08:28.320" style="s2">I&#39;m gonna give it this scope</p>
<p begin="00:08:28.320" end="00:08:31.595" style="s2">of being able to publish <br />to that pids project</p>
<p begin="00:08:31.595" end="00:08:32.760" style="s2">and that token,</p>
<p begin="00:08:32.760" end="00:08:35.470" style="s2">and I will copy this token and then paste</p>
<p begin="00:08:35.470" end="00:08:38.679" style="s2">it into the Secrets for <br />my GitHub repository.</p>
<p begin="00:08:38.679" end="00:08:40.629" style="s2">So I can do, add secret,</p>
<p begin="00:08:40.629" end="00:08:44.570" style="s2">call it PYPI token and paste it in here.</p>
<p begin="00:08:44.570" end="00:08:46.800" style="s2">And now anytime I push a release</p>
<p begin="00:08:46.800" end="00:08:48.350" style="s2">to this GitHub repository,</p>
<p begin="00:08:48.350" end="00:08:49.930" style="s2">my published work flow</p>
<p begin="00:08:49.930" end="00:08:51.970" style="s2">will run more published that release.</p>
<p begin="00:08:51.970" end="00:08:53.910" style="s2">So I&#39;m gonna modify my version number.</p>
<p begin="00:08:53.910" end="00:08:57.123" style="s2">Let&#39;s call this 0.1.2,</p>
<p begin="00:09:01.100" end="00:09:04.293" style="s2">And I&#39;m going to publish a new release.</p>
<p begin="00:09:05.137" end="00:09:06.920" style="s2">It&#39;s create new release.</p>
<p begin="00:09:06.920" end="00:09:08.703" style="s2">It&#39;s going to be called 0.1.2.</p>
<p begin="00:09:10.350" end="00:09:15.350" style="s2">And let&#39;s just say, <br />Added tests, full stop.</p>
<p begin="00:09:15.630" end="00:09:17.310" style="s2">I hit the publish button.</p>
<p begin="00:09:17.310" end="00:09:20.780" style="s2">And once again, that <br />action kicks into effect.</p>
<p begin="00:09:20.780" end="00:09:23.370" style="s2">So this is my published <br />Python package action,</p>
<p begin="00:09:23.370" end="00:09:24.870" style="s2">which is running the tests first,</p>
<p begin="00:09:24.870" end="00:09:26.427" style="s2">because you wouldn&#39;t want</p>
<p begin="00:09:26.427" end="00:09:27.758" style="s2">to publish your package if you</p>
<p begin="00:09:27.758" end="00:09:29.063" style="s2">haven&#39;t thoroughly tested it.</p>
<p begin="00:09:31.590" end="00:09:32.980" style="s2">And once the tests are passed</p>
<p begin="00:09:32.980" end="00:09:34.800" style="s2">hit deploy action,</p>
<p begin="00:09:34.800" end="00:09:36.940" style="s2">which ones that coin upload scripts</p>
<p begin="00:09:36.940" end="00:09:38.520" style="s2">that I showed you earlier.</p>
<p begin="00:09:38.520" end="00:09:42.363" style="s2">So this right here is installing <br />the required packages.</p>
<p begin="00:09:46.700" end="00:09:49.350" style="s2">And now it&#39;s publishing <br />that package up to PyPI,</p>
<p begin="00:09:50.230" end="00:09:52.150" style="s2">that&#39;s done. And here is a package</p>
<p begin="00:09:52.150" end="00:09:54.010" style="s2">on PyPI that was published entirely</p>
<p begin="00:09:54.010" end="00:09:56.393" style="s2">through automation using GitHub actions.</p>
<p begin="00:09:57.320" end="00:09:59.185" style="s2">So thanks for listening,</p>
<p begin="00:09:59.185" end="00:10:01.290" style="s2">and I&#39;ve published extensive notes on at</p>
<p begin="00:10:01.290" end="00:10:04.503" style="s2">github.com/simonw/pygotham-packaging.</p>
</div>
</body>
</tt>
